@use "@angular/material" as mat;
@import "/src/variables.scss";


// Tarvitseeko alla olevaa johonkin?
// @import "@angular/material/theming";

/* ======== Angular material custom theme ======== */

// FIXME: contrast värit eivät jostain syystä toimi esim. buttoneilla, vaan on templaten tyyleissä määritelty.
$custom-primary-palette: (
  50: #e0f4fa,
  100: #b0e2f3,
  200: #7dceeb,
  300: #4bbbe3,
  400: #23addf,
  500: #009dd7,
  600: #008fca,
  700: #007db7,
  800: #006ca3,
  900: #004e84,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: white,
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  ),
);

$custom-accent-palette: (
  50: #f9eae8,
  100: #fbcdbe,
  200: #f9ae94,
  300: #f78f6a,
  400: #f6774a,
  500: #f5612b,
  600: #ea5b27,
  700: #dc5423,
  800: #ce4e20,
  900: #b4421a,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: rgba(black, 0.87),
    600: white,
    700: white,
    800: white,
    900: white,
  ),
);

// $custom-palette: mat.$custom-primary-palette;

// accent: DC5323
$custom-primary: mat.define-palette($custom-primary-palette, 500);
$custom-accent: mat.define-palette($custom-accent-palette, 700);

// $custom-primary: mat-palette($custom-primary-palette);

// $custom-accent: mat-palette($mat-pink, 100, 500, A100);
// $custom-warn: mat-palette($mat-lime);
// $custom-theme: mat-light-theme($custom-primary-palette);

// $headline-1: mat.define-typography-level(35px, 35px, 700, $displayFont),
// $headline-2: mat.define-typography-level(20px, 20px, 500, $displayFont),
// $headline-6: mat.define-typography-level(50px, 50px, 800, $displayFont),

$displayFont: Montserrat;
$textFont: Roboto;

// Tyylitiedostot voivat käyttää näitä ilman importtia. Alla pitää olla väriarvot eikä toimi muuttujat.
:root {
  --primary: #009dd7;
  --accent: #dc5423;
  --contrast: white;
  --error: #B00020;
  --display-font: Montserrat;
}

// Material -komponentit käyttävät näitä.
// Arvot ovat: font-size, line-height, font-weight, font-family, letter-spacing
// subtitle-1: table header, subtitle-2: list footerissa

$scale-factor: 0.8;

// headline-5 = h1, headline6 = h2, subtitle1 = mm. footerin lista.
$custom-typography-config: mat.define-typography-config(
  $headline-5: mat.define-typography-level(2.5rem, 1.2, 900, $displayFont, normal),
  $headline-6: mat.define-typography-level(1.66rem, 1.2, 700, $displayFont, normal),
  $subtitle-1: mat.define-typography-level(rem, rem, 600, $textFont, normal),
  $subtitle-2: mat.define-typography-level(rem, rem, 400, $textFont, normal),
  $button: mat.define-typography-level(rem, rem, 600, $textFont, normal),
  $body-1: mat.define-typography-level(rem, rem, 400, $textFont, normal),
  $body-2: mat.define-typography-level(rem, rem, 400, $textFont, normal),
);

$custom-theme: mat.define-light-theme(
  (
    color: (
      primary: $custom-primary,
      accent: $custom-accent,
    ),
    typography: $custom-typography-config
  )
);

// Tällä teemoittaa H1 ja H2.
// @include mat.all-component-typographies($custom-typography-config);

// Tämä pitää olla ohjelmassa vain yhden kerran.

// Pitäisi toimia, mutta antaa errorin.
//@include mat.core($custom-typography-config);

@include mat.core();

// @mixin custom-theme($theme) {
//   $primary: map-get($theme, primary);
// }

// Emit theme-dependent styles for common features used across multiple components.
// @include mat.core-theme($custom-theme);

// @include mat-core($custom-typography-config);

// Emit styles for MatButton based on `$my-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
// @include mat.button-theme($custom-theme);

// @include mat.toolbar-theme($custom-theme);

// @include mat.core-theme($custom-theme);

// @include mat.button-theme($custom-theme);

// FIXME: laita tämän sijaan vain niille komponenteille, mitä käytetään.
@include mat.all-component-themes($custom-theme);

/* ================================================= */

// Skaalaus UI-suunnitelman kokoihin.
$scale-factor: 0.80;

body {
  font-family: $textFont;
  // font-size: 15px;
  line-height: 1.45;
  margin: 0;
}

main {
  background-color: #ffffff;
}

.theme-footer {
  background-color: mat.get-color-from-palette($custom-primary-palette, 500);
}

// FIXME: Jos tässä määritelee font-weightin, niin ei tee mitään. On nyt määritelty templateissa.
.theme-header-text {
  font-family: $displayFont;
  font-weight: 700;
  font-size: 1.3rem;
}

.theme-header-text-small {
  font-family: $displayFont;
  font-weight: 500;
  font-size: 1rem;
}

.theme-h1 {
  font-family: $displayFont;
  // font-family: mat.font-family($custom-typography-config, 'headline-3');
  font-size: 2.5rem;
  font-weight: 800;
  line-height: 1.2;

  // Älä laita enempää ala-marginaalia. Alkuun -nappi sijoittuu muuten väärin.
  margin-top: 3.8rem;
  margin-bottom: 0.6rem;
  position: relative;
  z-index: 0;
  // border-style: dotted;
  // border-color:#7dceeb;
  overflow: hidden;
  // Tarvitaan pituuden mukaan muuttuvan inline-elementti alla olevan otsikon
  // alla olevan viivan pituuden määrittelyyn.
  span {
    width: 100%;
    position: relative;
    // Otsikon viimeisen rivin alla oleva viiva.
    &:after {
      background: mat.get-color-from-palette($custom-accent-palette, 700);
      bottom: 4px;
      content: "";
      height: 3px;
      left: 0;
      padding-right: 5em;
      position: absolute;
      width: 100%;
      z-index: -1;
    }
  }
}

.theme-h2 {
  font-family: $displayFont;
  font-size: 1.66rem;
  font-weight: 700;
  line-height: 1.2;
  margin-block-start: 1.6rem;
  // margin-block-start: 2.6rem;
  margin-block-end: 0.8em; // Älä muuta
  // margin-left: 12px;
}

.theme-profile-name {
  font-family: $textFont;
  font-size: 1.3rem;
  font-weight: 500;
}

// Sisältää yleisimmin buttonin.
.theme-actions {
  display: flex;
  justify-content: flex-end;
  margin-top: 1.4rem;
}

.spacer {
  display: block;
  flex: 1 1 auto;
}

// @include angular-material-theme($custom-primary);

// html {
  // height: 100%;
// }

button[mat-raised-button] {
  min-width: 10em;
  padding-left: 2em;
  padding-right: 2em;
  text-transform: uppercase;
}

.mdc-button {
  height: 2.3em !important;
}

// FIXME: Miksei toimi teeman värimäärittelyistä?
.mat-primary {
  color: white !important;
}

//
.theme-label {
  color: #757575;
  font-size: 0.75rem;
  line-height: 0.9rem;
  margin-bottom: 0.2rem;
  + p {
    margin-top: 0.3rem;
  }
}

// mat-progress-bar {
// }

.theme-divider {
  border-top-color: mat.get-color-from-palette($custom-accent-palette, 700);
  border-top-width: 3px;
  border-top-style: solid;
  display: block;
  margin: 56px auto;
  width: 94%;
}

$debug: false;

h2 {
  @if $debug {  border: 1px solid blue; }
}

.ticket-header {
  display: flex;
  align-items: flex-start;
  gap: 1rem;
  @if $debug { border: 1px dotted purple; }
  .user-info-block {    // .text-info + ikoni
    @if $debug { border: 1px dotted green; }
    display: flex;
    align-items: center;
    flex-shrink: 0;
    gap: inherit;
    margin-top: 2rem;   // H2 elementti asettaa omat marginaalit, joten saadaan suhteessa oikeaan kohtaan.
    height: 100%;
    .text-info {        // Käyttäjätiedot
      @if $debug { border: 1px solid gray; }
      margin-top: 0.3rem;
      text-align: right;
      .theme-profile-name {
        display: block;
        line-height: 1.15;
        margin-bottom: 0.3rem;
      }
    }
    img {
      @if $debug { border: 1px solid lightblue; }
      display: inline-block;
      flex-shrink: 0;
      position: relative;
      height: 3rem;
      width: 3rem;
      margin: auto;
      object-fit: cover;
    }
  }
}



@media (max-width: $XSmall) {

  .theme-main-headline, .theme-h1 {
    font-size: 2.5rem * 0.8;
    line-height: 1.1;
  }

  .theme-h2 {
    font-size: 1.66rem * 0.8;
    line-height: 1;
  }

  .theme-header-text {
    font-size: 1.25rem;
  }

  .theme-header-text-small {
    font-size: 1rem;
  }

  .ticket-header {
    flex-wrap: wrap;
  }
}
